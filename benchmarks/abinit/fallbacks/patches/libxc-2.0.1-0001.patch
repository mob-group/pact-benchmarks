=== removed file 'libxc-2.0.1/src/libxc.f90'
--- libxc-2.0.1/src/libxc.f90	2013-05-22 11:01:22 +0000
+++ libxc-2.0.1/src/libxc.f90	1970-01-01 00:00:00 +0000
@@ -1,484 +0,0 @@
-# 1 "/home/cfc/micael/devel/libxc/svn/tags/2.0.1/src/libxc_master.F90"
-# 1 "<command-line>"
-# 1 "/home/cfc/micael/devel/libxc/svn/tags/2.0.1/src/libxc_master.F90"
-!! Copyright (C) 2003-2006 M. Marques, A. Castro, A. Rubio, G. Bertsch
-!!
-!! This program is free software; you can redistribute it and/or modify
-!! it under the terms of the GNU Lesser General Public License as published by
-!! the Free Software Foundation; either version 2, or (at your option)
-!! any later version.
-!!
-!! This program is distributed in the hope that it will be useful,
-!! but WITHOUT ANY WARRANTY; without even the implied warranty of
-!! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-!! GNU Lesser General Public License for more details.
-!!
-!! You should have received a copy of the GNU Lesser General Public License
-!! along with this program; if not, write to the Free Software
-!! Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-!! 02111-1307, USA.
-!!
-!! $Id: libxc.f90 3550 2007-11-19 14:32:49Z marques $
-# 27 "/home/cfc/micael/devel/libxc/svn/tags/2.0.1/src/libxc_master.F90"
-!-------------------------------------------------------------------
-module xc_f90_types_m
-
-
-
-  integer, public, parameter :: xc_f90_kind = selected_real_kind(14)
-
-
-  type xc_f90_pointer_t
-    private
-    integer, pointer :: buffer
-  end type xc_f90_pointer_t
-
-end module xc_f90_types_m
-
-
-!-------------------------------------------------------------------
-module xc_f90_lib_m
-
-  use xc_f90_types_m
-  use libxc_funcs_m
-
-  implicit none
-
-  public
-
-  ! Families of xc functionals
-  integer, parameter :: &
-    XC_FAMILY_UNKNOWN = -1, &
-    XC_FAMILY_NONE = 0, &
-    XC_FAMILY_LDA = 1, &
-    XC_FAMILY_GGA = 2, &
-    XC_FAMILY_MGGA = 4, &
-    XC_FAMILY_LCA = 8, &
-    XC_FAMILY_OEP = 16, &
-    XC_FAMILY_HYB_GGA = 32
-
-  integer, parameter :: &
-    XC_UNPOLARIZED = 1, & ! Spin unpolarized
-    XC_POLARIZED = 2 ! Spin polarized
-
-  integer, parameter :: &
-    XC_NON_RELATIVISTIC = 0, & ! Functional includes or not relativistic
-    XC_RELATIVISTIC = 1 ! corrections. Only available in some functionals.
-
-  ! Kinds
-  integer, parameter :: &
-    XC_EXCHANGE = 0, &
-    XC_CORRELATION = 1, &
-    XC_EXCHANGE_CORRELATION = 2, &
-    XC_KINETIC = 3
-
-  integer, parameter :: &
-    XC_FLAGS_HAVE_EXC = 1, &
-    XC_FLAGS_HAVE_VXC = 2, &
-    XC_FLAGS_HAVE_FXC = 4, &
-    XC_FLAGS_HAVE_KXC = 8, &
-    XC_FLAGS_HAVE_LXC = 16, &
-    XC_FLAGS_1D = 32, &
-    XC_FLAGS_2D = 64, &
-    XC_FLAGS_3D = 128, &
-    XC_FLAGS_STABLE = 512, &
-    XC_FLAGS_DEVELOPMENT = 1024
-
-  ! This value was redefined as XC_GGA_X_LB, we define it here to keep
-  ! compatibility.
-  integer, parameter :: XC_GGA_XC_LB = 160
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_version(major, minor)
-      integer, intent(out) :: major, minor
-    end subroutine xc_f90_version
-  end interface
-
-  !----------------------------------------------------------------
-  interface
-    integer function xc_f90_info_number(info)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: info
-    end function xc_f90_info_number
-
-    integer function xc_f90_info_kind(info)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: info
-    end function xc_f90_info_kind
-
-    subroutine xc_f90_info_name(info, s)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: info
-      character(len=*), intent(out) :: s
-    end subroutine xc_f90_info_name
-
-    integer function xc_f90_info_family(info)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: info
-    end function xc_f90_info_family
-
-    integer function xc_f90_info_flags(info)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: info
-    end function xc_f90_info_flags
-
-    subroutine xc_f90_info_refs(info, number, str, s)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: info
-      integer, intent(inout) :: number ! number of the reference. Must be 0 in the first call
-      type(xc_f90_pointer_t), intent(inout) :: str ! this will hold a (char **) pointer
-      character(len=*), intent(out) :: s ! the string that is output
-    end subroutine xc_f90_info_refs
-
-    integer function xc_f90_family_from_id(id)
-      use xc_f90_types_m
-      integer, intent(in) :: id
-    end function xc_f90_family_from_id
-  end interface
-
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_func_init(p, info, functional, nspin)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(out) :: p
-      type(xc_f90_pointer_t), intent(out) :: info
-      integer, intent(in) :: functional
-      integer, intent(in) :: nspin
-    end subroutine xc_f90_func_init
-
-    subroutine xc_f90_func_end(p)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(inout) :: p
-    end subroutine xc_f90_func_end
-  end interface
-
-
-  ! LDAs
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_lda(p, np, rho, zk, vrho, fxc, kxc)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho ! rho(nspin) the density
-      real(xc_f90_kind), intent(out) :: zk ! the energy per unit particle
-      real(xc_f90_kind), intent(out) :: vrho ! v(nspin) the potential
-      real(xc_f90_kind), intent(out) :: fxc ! v(nspin,nspin) the xc kernel
-      real(xc_f90_kind), intent(out) :: kxc ! v(nspin,nspin,nspin) the derivative of xc kernel
-    end subroutine xc_f90_lda
-
-    subroutine xc_f90_lda_exc(p, np, rho, zk)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho ! rho(nspin) the density
-      real(xc_f90_kind), intent(out) :: zk ! the energy per unit particle
-    end subroutine xc_f90_lda_exc
-
-    subroutine xc_f90_lda_exc_vxc(p, np, rho, e, v)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho ! rho(nspin) the density
-      real(xc_f90_kind), intent(out) :: e ! the energy per unit particle
-      real(xc_f90_kind), intent(out) :: v ! v(nspin) the potential
-    end subroutine xc_f90_lda_exc_vxc
-
-    subroutine xc_f90_lda_vxc(p, np, rho, v)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho ! rho(nspin) the density
-      real(xc_f90_kind), intent(out) :: v ! v(nspin) the potential
-    end subroutine xc_f90_lda_vxc
-
-    subroutine xc_f90_lda_fxc(p, np, rho, fxc)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho ! rho(nspin) the density
-      real(xc_f90_kind), intent(out) :: fxc ! v(nspin,nspin) the xc kernel
-    end subroutine xc_f90_lda_fxc
-
-    subroutine xc_f90_lda_kxc(p, np, rho, kxc)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho ! rho(nspin) the density
-      real(xc_f90_kind), intent(out) :: kxc
-    end subroutine xc_f90_lda_kxc
-  end interface
-
-
-  interface
-    subroutine xc_f90_lda_x_1d_set_par(p, interaction, bb)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(inout) :: p
-      integer, intent(in) :: interaction
-      real(xc_f90_kind), intent(in) :: bb
-    end subroutine xc_f90_lda_x_1d_set_par
-
-    subroutine xc_f90_lda_c_xalpha_set_par(p, alpha)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(inout) :: p
-      real(xc_f90_kind), intent(in) :: alpha
-    end subroutine xc_f90_lda_c_xalpha_set_par
-
-    subroutine xc_f90_lda_x_set_par(p, alpha, relativistic, omega)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(inout) :: p
-      real(xc_f90_kind), intent(in) :: alpha ! of Xalpha, set to 4/3 to obtain standard LDA
-      integer, intent(in) :: relativistic
-      real(xc_f90_kind), intent(in) :: omega
-    end subroutine xc_f90_lda_x_set_par
-
-    subroutine xc_f90_lda_c_1d_csc_set_par(p, interaction, bb)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(inout) :: p
-      integer, intent(in) :: interaction
-      real(xc_f90_kind), intent(in) :: bb
-    end subroutine xc_f90_lda_c_1d_csc_set_par
-
-    subroutine xc_f90_lda_c_2d_prm_set_par(p, N)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(inout) :: p
-      real(xc_f90_kind), intent(in) :: N
-    end subroutine xc_f90_lda_c_2d_prm_set_par
-  end interface
-
-  ! GGAs
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_gga(p, np, rho, sigma, zk, vrho, vsigma, v2rho2, v2rhosigma, v2sigma2)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(out) :: zk
-      real(xc_f90_kind), intent(out) :: vrho
-      real(xc_f90_kind), intent(out) :: vsigma
-      real(xc_f90_kind), intent(out) :: v2rho2
-      real(xc_f90_kind), intent(out) :: v2rhosigma
-      real(xc_f90_kind), intent(out) :: v2sigma2
-    end subroutine xc_f90_gga
-
-    subroutine xc_f90_gga_exc(p, np, rho, sigma, zk)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(out) :: zk
-    end subroutine xc_f90_gga_exc
-
-    subroutine xc_f90_gga_exc_vxc(p, np, rho, sigma, zk, vrho, vsigma)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(out) :: zk
-      real(xc_f90_kind), intent(out) :: vrho
-      real(xc_f90_kind), intent(out) :: vsigma
-    end subroutine xc_f90_gga_exc_vxc
-
-    subroutine xc_f90_gga_vxc(p, np, rho, sigma, vrho, vsigma)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(out) :: vrho
-      real(xc_f90_kind), intent(out) :: vsigma
-    end subroutine xc_f90_gga_vxc
-
-    subroutine xc_f90_gga_fxc(p, np, rho, sigma, v2rho2, v2rhosigma, v2sigma2)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(out) :: v2rho2
-      real(xc_f90_kind), intent(out) :: v2rhosigma
-      real(xc_f90_kind), intent(out) :: v2sigma2
-    end subroutine xc_f90_gga_fxc
-  end interface
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_gga_lb_set_par(p, modified, threshold, ip, qtot)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: modified ! should we use the modified version
-      real(xc_f90_kind), intent(in) :: threshold ! if so, the threshold to use the asymtotic version
-      real(xc_f90_kind), intent(in) :: ip ! ionization potential
-      real(xc_f90_kind), intent(in) :: qtot ! total charge
-    end subroutine xc_f90_gga_lb_set_par
-  end interface
-
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_gga_lb_modified(p, np, rho, grho, r, dedd)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho ! rho(nspin) the density
-      real(xc_f90_kind), intent(in) :: grho ! grho(3,nspin) the gradient of the density
-      real(xc_f90_kind), intent(in) :: r ! distance from center of finite system
-      real(xc_f90_kind), intent(out) :: dedd
-    end subroutine xc_f90_gga_lb_modified
-  end interface
-
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_hyb_exx_coef(p, coef)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      real(xc_f90_kind), intent(out) :: coef
-    end subroutine xc_f90_hyb_exx_coef
-  end interface
-
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_gga_x_wpbeh_set_par(p, omega)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      real(xc_f90_kind), intent(in) :: omega ! range separation
-    end subroutine xc_f90_gga_x_wpbeh_set_par
-  end interface
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_gga_x_hjs_set_par(p, omega)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      real(xc_f90_kind), intent(in) :: omega ! range separation
-    end subroutine xc_f90_gga_x_hjs_set_par
-  end interface
-
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_hyb_gga_xc_hse_set_par(p, omega)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      real(xc_f90_kind), intent(in) :: omega ! range separation
-    end subroutine xc_f90_hyb_gga_xc_hse_set_par
-  end interface
-
-
-  ! the meta-GGAs
-  !----------------------------------------------------------------
-  interface
-    subroutine xc_f90_mgga(p, np, rho, sigma, lapl, tau, zk, vrho, vsigma, vlapl, vtau, &
-      v2rho2, v2sigma2, v2lapl2, v2tau2, v2rhosigma, v2rholapl, v2rhotau, &
-      v2sigmalapl, v2sigmatau, v2lapltau)
-
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(in) :: lapl
-      real(xc_f90_kind), intent(in) :: tau
-      real(xc_f90_kind), intent(out) :: zk
-      real(xc_f90_kind), intent(out) :: vrho
-      real(xc_f90_kind), intent(out) :: vsigma
-      real(xc_f90_kind), intent(out) :: vlapl
-      real(xc_f90_kind), intent(out) :: vtau
-      real(xc_f90_kind), intent(out) :: v2rho2
-      real(xc_f90_kind), intent(out) :: v2sigma2
-      real(xc_f90_kind), intent(out) :: v2lapl2
-      real(xc_f90_kind), intent(out) :: v2tau2
-      real(xc_f90_kind), intent(out) :: v2rhosigma
-      real(xc_f90_kind), intent(out) :: v2rholapl
-      real(xc_f90_kind), intent(out) :: v2rhotau
-      real(xc_f90_kind), intent(out) :: v2sigmalapl
-      real(xc_f90_kind), intent(out) :: v2sigmatau
-      real(xc_f90_kind), intent(out) :: v2lapltau
-    end subroutine xc_f90_mgga
-
-    subroutine xc_f90_mgga_exc(p, np, rho, sigma, lapl, tau, zk)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(in) :: lapl
-      real(xc_f90_kind), intent(in) :: tau
-      real(xc_f90_kind), intent(out) :: zk
-    end subroutine xc_f90_mgga_exc
-
-    subroutine xc_f90_mgga_exc_vxc(p, np, rho, sigma, lapl, tau, zk, vrho, vsigma, vlapl, vtau)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(in) :: lapl
-      real(xc_f90_kind), intent(in) :: tau
-      real(xc_f90_kind), intent(out) :: zk
-      real(xc_f90_kind), intent(out) :: vrho
-      real(xc_f90_kind), intent(out) :: vsigma
-      real(xc_f90_kind), intent(out) :: vlapl
-      real(xc_f90_kind), intent(out) :: vtau
-    end subroutine xc_f90_mgga_exc_vxc
-
-    subroutine xc_f90_mgga_vxc(p, np, rho, sigma, lapl, tau, vrho, vsigma, vlapl, vtau)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(in) :: lapl
-      real(xc_f90_kind), intent(in) :: tau
-      real(xc_f90_kind), intent(out) :: vrho
-      real(xc_f90_kind), intent(out) :: vsigma
-      real(xc_f90_kind), intent(out) :: vlapl
-      real(xc_f90_kind), intent(out) :: vtau
-    end subroutine xc_f90_mgga_vxc
-
-    subroutine xc_f90_mgga_fxc(p, np, rho, sigma, lapl, tau, &
-      v2rho2, v2sigma2, v2lapl2, v2tau2, v2rhosigma, v2rholapl, v2rhotau, &
-      v2sigmalapl, v2sigmatau, v2lapltau)
-
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(in) :: p
-      integer, intent(in) :: np
-      real(xc_f90_kind), intent(in) :: rho
-      real(xc_f90_kind), intent(in) :: sigma
-      real(xc_f90_kind), intent(in) :: lapl
-      real(xc_f90_kind), intent(in) :: tau
-      real(xc_f90_kind), intent(out) :: v2rho2
-      real(xc_f90_kind), intent(out) :: v2sigma2
-      real(xc_f90_kind), intent(out) :: v2lapl2
-      real(xc_f90_kind), intent(out) :: v2tau2
-      real(xc_f90_kind), intent(out) :: v2rhosigma
-      real(xc_f90_kind), intent(out) :: v2rholapl
-      real(xc_f90_kind), intent(out) :: v2rhotau
-      real(xc_f90_kind), intent(out) :: v2sigmalapl
-      real(xc_f90_kind), intent(out) :: v2sigmatau
-      real(xc_f90_kind), intent(out) :: v2lapltau
-    end subroutine xc_f90_mgga_fxc
-  end interface
-
-  interface
-    subroutine xc_f90_mgga_x_tb09_set_par(p, cc)
-      use xc_f90_types_m
-      type(xc_f90_pointer_t), intent(inout) :: p
-      real(xc_f90_kind), intent(in) :: cc
-    end subroutine xc_f90_mgga_x_tb09_set_par
-  end interface
-
-
-end module xc_f90_lib_m
-
-!! Local Variables:
-!! mode: f90
-!! coding: utf-8
-!! End:

=== removed file 'libxc-2.0.1/src/libxc_funcs.f90'
--- libxc-2.0.1/src/libxc_funcs.f90	2013-05-22 11:01:22 +0000
+++ libxc-2.0.1/src/libxc_funcs.f90	1970-01-01 00:00:00 +0000
@@ -1,266 +0,0 @@
-module libxc_funcs_m
-  implicit none
-
-  public
-
-  integer, parameter :: XC_LDA_X             =   1  !  Exchange                     
-  integer, parameter :: XC_LDA_C_WIGNER      =   2  !  Wigner parametrization       
-  integer, parameter :: XC_LDA_C_RPA         =   3  !  Random Phase Approximation   
-  integer, parameter :: XC_LDA_C_HL          =   4  !  Hedin & Lundqvist            
-  integer, parameter :: XC_LDA_C_GL          =   5  !  Gunnarson & Lundqvist        
-  integer, parameter :: XC_LDA_C_XALPHA      =   6  !  Slater Xalpha                
-  integer, parameter :: XC_LDA_C_VWN         =   7  !  Vosko, Wilk, & Nussair (5)   
-  integer, parameter :: XC_LDA_C_VWN_RPA     =   8  !  Vosko, Wilk, & Nussair (RPA) 
-  integer, parameter :: XC_LDA_C_PZ          =   9  !  Perdew & Zunger              
-  integer, parameter :: XC_LDA_C_PZ_MOD      =  10  !  Perdew & Zunger (Modified)   
-  integer, parameter :: XC_LDA_C_OB_PZ       =  11  !  Ortiz & Ballone (PZ)         
-  integer, parameter :: XC_LDA_C_PW          =  12  !  Perdew & Wang                
-  integer, parameter :: XC_LDA_C_PW_MOD      =  13  !  Perdew & Wang (Modified)     
-  integer, parameter :: XC_LDA_C_OB_PW       =  14  !  Ortiz & Ballone (PW)         
-  integer, parameter :: XC_LDA_C_2D_AMGB     =  15  !  Attacalite et al             
-  integer, parameter :: XC_LDA_C_2D_PRM      =  16  !  Pittalis, Rasanen & Marques correlation in 2D 
-  integer, parameter :: XC_LDA_C_vBH         =  17  !  von Barth & Hedin            
-  integer, parameter :: XC_LDA_C_1D_CSC      =  18  !  Casula, Sorella, and Senatore 1D correlation     
-  integer, parameter :: XC_LDA_X_2D          =  19  !  Exchange in 2D 
-  integer, parameter :: XC_LDA_XC_TETER93    =  20  !  Teter 93 parametrization                
-  integer, parameter :: XC_LDA_X_1D          =  21  !  Exchange in 1D     
-  integer, parameter :: XC_LDA_C_ML1         =  22  !  Modified LSD (version 1) of Proynov and Salahub 
-  integer, parameter :: XC_LDA_C_ML2         =  23  !  Modified LSD (version 2) of Proynov and Salahub 
-  integer, parameter :: XC_LDA_C_GOMBAS      =  24  !  Gombas parametrization       
-  integer, parameter :: XC_LDA_C_PW_RPA      =  25  !  Perdew & Wang fit of the RPA 
-  integer, parameter :: XC_LDA_C_1D_LOOS     =  26  !  P-F Loos correlation LDA     
-  integer, parameter :: XC_LDA_C_RC04        =  27  !  Ragot-Cortona 
-  integer, parameter :: XC_LDA_C_VWN_1       =  28  !  Vosko, Wilk, & Nussair (1)   
-  integer, parameter :: XC_LDA_C_VWN_2       =  29  !  Vosko, Wilk, & Nussair (2)   
-  integer, parameter :: XC_LDA_C_VWN_3       =  30  !  Vosko, Wilk, & Nussair (3)   
-  integer, parameter :: XC_LDA_C_VWN_4       =  31  !  Vosko, Wilk, & Nussair (4)   
-  integer, parameter :: XC_LDA_K_TF          =  50  !  Thomas-Fermi kinetic energy functional 
-  integer, parameter :: XC_LDA_K_LP          =  51  !  Lee and Parr Gaussian ansatz           
-  integer, parameter :: XC_GGA_C_OP_XALPHA   =  84  !  one-parameter progressive functional (G96 version)  
-  integer, parameter :: XC_GGA_C_OP_G96      =  85  !  one-parameter progressive functional (G96 version)  
-  integer, parameter :: XC_GGA_C_OP_PBE      =  86  !  one-parameter progressive functional (PBE version)  
-  integer, parameter :: XC_GGA_C_OP_B88      =  87  !  one-parameter progressive functional (B88 version) 
-  integer, parameter :: XC_GGA_C_FT97        =  88  !  Filatov & Thiel correlation 
-  integer, parameter :: XC_GGA_C_SPBE        =  89  !  PBE correlation to be used with the SSB exchange   
-  integer, parameter :: XC_GGA_X_SSB_SW      =  90  !  Swarta, Sola and Bickelhaupt correction to PBE  
-  integer, parameter :: XC_GGA_X_SSB         =  91  !  Swarta, Sola and Bickelhaupt  
-  integer, parameter :: XC_GGA_X_SSB_D       =  92  !  Swarta, Sola and Bickelhaupt dispersion  
-  integer, parameter :: XC_GGA_XC_HCTH_407P  =  93  !  HCTH/407+                                
-  integer, parameter :: XC_GGA_XC_HCTH_P76   =  94  !  HCTH p=7/6                               
-  integer, parameter :: XC_GGA_XC_HCTH_P14   =  95  !  HCTH p=1/4                               
-  integer, parameter :: XC_GGA_XC_B97_GGA1   =  96  !  Becke 97 GGA-1                           
-  integer, parameter :: XC_GGA_XC_HCTH_A     =  97  !  HCTH-A                                   
-  integer, parameter :: XC_GGA_X_BPCCAC      =  98  !  BPCCAC (GRAC for the energy) 
-  integer, parameter :: XC_GGA_C_REVTCA      =  99  !  Tognetti, Cortona, Adamo (revised) 
-  integer, parameter :: XC_GGA_C_TCA         = 100  !  Tognetti, Cortona, Adamo 
-  integer, parameter :: XC_GGA_X_PBE         = 101  !  Perdew, Burke & Ernzerhof exchange             
-  integer, parameter :: XC_GGA_X_PBE_R       = 102  !  Perdew, Burke & Ernzerhof exchange (revised)   
-  integer, parameter :: XC_GGA_X_B86         = 103  !  Becke 86 Xalfa,beta,gamma                      
-  integer, parameter :: XC_GGA_X_HERMAN      = 104  !  Herman et al original GGA                  
-  integer, parameter :: XC_GGA_X_B86_MGC     = 105  !  Becke 86 Xalfa,beta,gamma (with mod. grad. correction) 
-  integer, parameter :: XC_GGA_X_B88         = 106  !  Becke 88 
-  integer, parameter :: XC_GGA_X_G96         = 107  !  Gill 96                                        
-  integer, parameter :: XC_GGA_X_PW86        = 108  !  Perdew & Wang 86 
-  integer, parameter :: XC_GGA_X_PW91        = 109  !  Perdew & Wang 91 
-  integer, parameter :: XC_GGA_X_OPTX        = 110  !  Handy & Cohen OPTX 01                          
-  integer, parameter :: XC_GGA_X_DK87_R1     = 111  !  dePristo & Kress 87 (version R1)               
-  integer, parameter :: XC_GGA_X_DK87_R2     = 112  !  dePristo & Kress 87 (version R2)               
-  integer, parameter :: XC_GGA_X_LG93        = 113  !  Lacks & Gordon 93 
-  integer, parameter :: XC_GGA_X_FT97_A      = 114  !  Filatov & Thiel 97 (version A) 
-  integer, parameter :: XC_GGA_X_FT97_B      = 115  !  Filatov & Thiel 97 (version B) 
-  integer, parameter :: XC_GGA_X_PBE_SOL     = 116  !  Perdew, Burke & Ernzerhof exchange (solids)    
-  integer, parameter :: XC_GGA_X_RPBE        = 117  !  Hammer, Hansen & Norskov (PBE-like) 
-  integer, parameter :: XC_GGA_X_WC          = 118  !  Wu & Cohen 
-  integer, parameter :: XC_GGA_X_MPW91       = 119  !  Modified form of PW91 by Adamo & Barone 
-  integer, parameter :: XC_GGA_X_AM05        = 120  !  Armiento & Mattsson 05 exchange                
-  integer, parameter :: XC_GGA_X_PBEA        = 121  !  Madsen (PBE-like) 
-  integer, parameter :: XC_GGA_X_MPBE        = 122  !  Adamo & Barone modification to PBE             
-  integer, parameter :: XC_GGA_X_XPBE        = 123  !  xPBE reparametrization by Xu & Goddard         
-  integer, parameter :: XC_GGA_X_2D_B86_MGC  = 124  !  Becke 86 MGC for 2D systems 
-  integer, parameter :: XC_GGA_X_BAYESIAN    = 125  !  Bayesian best fit for the enhancement factor 
-  integer, parameter :: XC_GGA_X_PBE_JSJR    = 126  !  JSJR reparametrization by Pedroza, Silva & Capelle 
-  integer, parameter :: XC_GGA_X_2D_B88      = 127  !  Becke 88 in 2D 
-  integer, parameter :: XC_GGA_X_2D_B86      = 128  !  Becke 86 Xalfa,beta,gamma                      
-  integer, parameter :: XC_GGA_X_2D_PBE      = 129  !  Perdew, Burke & Ernzerhof exchange in 2D          
-  integer, parameter :: XC_GGA_C_PBE         = 130  !  Perdew, Burke & Ernzerhof correlation              
-  integer, parameter :: XC_GGA_C_LYP         = 131  !  Lee, Yang & Parr 
-  integer, parameter :: XC_GGA_C_P86         = 132  !  Perdew 86 
-  integer, parameter :: XC_GGA_C_PBE_SOL     = 133  !  Perdew, Burke & Ernzerhof correlation SOL          
-  integer, parameter :: XC_GGA_C_PW91        = 134  !  Perdew & Wang 91 
-  integer, parameter :: XC_GGA_C_AM05        = 135  !  Armiento & Mattsson 05 correlation             
-  integer, parameter :: XC_GGA_C_XPBE        = 136  !  xPBE reparametrization by Xu & Goddard             
-  integer, parameter :: XC_GGA_C_LM          = 137  !  Langreth and Mehl correlation          
-  integer, parameter :: XC_GGA_C_PBE_JRGX    = 138  !  JRGX reparametrization by Pedroza, Silva & Capelle 
-  integer, parameter :: XC_GGA_X_OPTB88_VDW  = 139  !  Becke 88 reoptimized to be used with vdW functional of Dion et al
-  integer, parameter :: XC_GGA_X_PBEK1_VDW   = 140  !  PBE reparametrization for vdW 
-  integer, parameter :: XC_GGA_X_OPTPBE_VDW  = 141  !  PBE reparametrization for vdW 
-  integer, parameter :: XC_GGA_X_RGE2        = 142  !  Regularized PBE 
-  integer, parameter :: XC_GGA_C_RGE2        = 143  !  Regularized PBE                                    
-  integer, parameter :: XC_GGA_X_RPW86       = 144  !  refitted Perdew & Wang 86 
-  integer, parameter :: XC_GGA_X_KT1         = 145  !  Keal and Tozer version 1             
-  integer, parameter :: XC_GGA_XC_KT2        = 146  !  Keal and Tozer version 2             
-  integer, parameter :: XC_GGA_C_WL          = 147  !  Wilson & Levy 
-  integer, parameter :: XC_GGA_C_WI          = 148  !  Wilson & Ivanov 
-  integer, parameter :: XC_GGA_X_MB88        = 149  !  Modified Becke 88 for proton transfer 
-  integer, parameter :: XC_GGA_X_SOGGA       = 150  !  Second-order generalized gradient approximation 
-  integer, parameter :: XC_GGA_X_SOGGA11     = 151  !  Second-order generalized gradient approximation 2011 
-  integer, parameter :: XC_GGA_C_SOGGA11     = 152  !  Second-order generalized gradient approximation 2011 
-  integer, parameter :: XC_GGA_C_WI0         = 153  !  Wilson & Ivanov initial version 
-  integer, parameter :: XC_GGA_XC_TH1        = 154  !  Tozer and Handy v. 1 
-  integer, parameter :: XC_GGA_XC_TH2        = 155  !  Tozer and Handy v. 2 
-  integer, parameter :: XC_GGA_XC_TH3        = 156  !  Tozer and Handy v. 3 
-  integer, parameter :: XC_GGA_XC_TH4        = 157  !  Tozer and Handy v. 4 
-  integer, parameter :: XC_GGA_X_C09X        = 158  !  C09x to be used with the VdW of Rutgers-Chalmers     
-  integer, parameter :: XC_GGA_C_SOGGA11_X   = 159  !  To be used with hyb_gga_x_SOGGA11-X  
-  integer, parameter :: XC_GGA_X_LB          = 160  !  van Leeuwen & Baerends 
-  integer, parameter :: XC_GGA_XC_HCTH_93    = 161  !  HCTH functional fitted to  93 molecules  
-  integer, parameter :: XC_GGA_XC_HCTH_120   = 162  !  HCTH functional fitted to 120 molecules  
-  integer, parameter :: XC_GGA_XC_HCTH_147   = 163  !  HCTH functional fitted to 147 molecules  
-  integer, parameter :: XC_GGA_XC_HCTH_407   = 164  !  HCTH functional fitted to 407 molecules  
-  integer, parameter :: XC_GGA_XC_EDF1       = 165  !  Empirical functionals from Adamson, Gill, and Pople 
-  integer, parameter :: XC_GGA_XC_XLYP       = 166  !  XLYP functional 
-  integer, parameter :: XC_GGA_XC_B97        = 167  !  Becke 97                                 
-  integer, parameter :: XC_GGA_XC_B97_1      = 168  !  Becke 97-1                               
-  integer, parameter :: XC_GGA_XC_B97_2      = 169  !  Becke 97-2                               
-  integer, parameter :: XC_GGA_XC_B97_D      = 170  !  Grimme functional to be used with C6 vdW term 
-  integer, parameter :: XC_GGA_XC_B97_K      = 171  !  Boese-Martin for Kinetics                
-  integer, parameter :: XC_GGA_XC_B97_3      = 172  !  Becke 97-3                               
-  integer, parameter :: XC_GGA_XC_PBE1W      = 173  !  Functionals fitted for water 
-  integer, parameter :: XC_GGA_XC_MPWLYP1W   = 174  !  Functionals fitted for water 
-  integer, parameter :: XC_GGA_XC_PBELYP1W   = 175  !  Functionals fitted for water 
-  integer, parameter :: XC_GGA_XC_SB98_1a    = 176  !  Schmider-Becke 98 parameterization 1a    
-  integer, parameter :: XC_GGA_XC_SB98_1b    = 177  !  Schmider-Becke 98 parameterization 1b    
-  integer, parameter :: XC_GGA_XC_SB98_1c    = 178  !  Schmider-Becke 98 parameterization 1c    
-  integer, parameter :: XC_GGA_XC_SB98_2a    = 179  !  Schmider-Becke 98 parameterization 2a    
-  integer, parameter :: XC_GGA_XC_SB98_2b    = 180  !  Schmider-Becke 98 parameterization 2b    
-  integer, parameter :: XC_GGA_XC_SB98_2c    = 181  !  Schmider-Becke 98 parameterization 2c    
-  integer, parameter :: XC_GGA_X_LBM         = 182  !  van Leeuwen & Baerends modified
-  integer, parameter :: XC_GGA_X_OL2         = 183  !  Exchange form based on Ou-Yang and Levy v.2 
-  integer, parameter :: XC_GGA_X_APBE        = 184  !  mu fixed from the semiclassical neutral atom   
-  integer, parameter :: XC_GGA_K_APBE        = 185  !  mu fixed from the semiclassical neutral atom   
-  integer, parameter :: XC_GGA_C_APBE        = 186  !  mu fixed from the semiclassical neutral atom       
-  integer, parameter :: XC_GGA_K_TW1         = 187  !  Tran and Wesolowski set 1 (Table II)           
-  integer, parameter :: XC_GGA_K_TW2         = 188  !  Tran and Wesolowski set 2 (Table II)           
-  integer, parameter :: XC_GGA_K_TW3         = 189  !  Tran and Wesolowski set 3 (Table II)           
-  integer, parameter :: XC_GGA_K_TW4         = 190  !  Tran and Wesolowski set 4 (Table II)           
-  integer, parameter :: XC_GGA_X_HTBS        = 191  !  Haas, Tran, Blaha, and Schwarz  
-  integer, parameter :: XC_GGA_X_AIRY        = 192  !  Constantin et al based on the Airy gas 
-  integer, parameter :: XC_GGA_X_LAG         = 193  !  Local Airy Gas 
-  integer, parameter :: XC_GGA_XC_MOHLYP     = 194  !  Functional for organometallic chemistry 
-  integer, parameter :: XC_GGA_XC_MOHLYP2    = 195  !  Functional for barrier heights 
-  integer, parameter :: XC_GGA_XC_TH_FL      = 196  !  Tozer and Handy v. FL  
-  integer, parameter :: XC_GGA_XC_TH_FC      = 197  !  Tozer and Handy v. FC  
-  integer, parameter :: XC_GGA_XC_TH_FCFO    = 198  !  Tozer and Handy v. FCFO 
-  integer, parameter :: XC_GGA_XC_TH_FCO     = 199  !  Tozer and Handy v. FCO 
-  integer, parameter :: XC_GGA_C_OPTC        = 200  !  Optimized correlation functional of Cohen and Handy 
-  integer, parameter :: XC_GGA_K_VW          = 500  !  von Weiszaecker functional 
-  integer, parameter :: XC_GGA_K_GE2         = 501  !  Second-order gradient expansion (l = 1/9) 
-  integer, parameter :: XC_GGA_K_GOLDEN      = 502  !  TF-lambda-vW form by Golden (l = 13/45) 
-  integer, parameter :: XC_GGA_K_YT65        = 503  !  TF-lambda-vW form by Yonei and Tomishima (l = 1/5) 
-  integer, parameter :: XC_GGA_K_BALTIN      = 504  !  TF-lambda-vW form by Baltin (l = 5/9) 
-  integer, parameter :: XC_GGA_K_LIEB        = 505  !  TF-lambda-vW form by Lieb (l = 0.185909191) 
-  integer, parameter :: XC_GGA_K_ABSR1       = 506  !  gamma-TFvW form by Acharya et al [g = 1 - 1.412/N^(1/3)] 
-  integer, parameter :: XC_GGA_K_ABSR2       = 507  !  gamma-TFvW form by Acharya et al [g = 1 - 1.332/N^(1/3)] 
-  integer, parameter :: XC_GGA_K_GR          = 508  !  gamma-TFvW form by Gázquez and Robles 
-  integer, parameter :: XC_GGA_K_LUDENA      = 509  !  gamma-TFvW form by Ludeña 
-  integer, parameter :: XC_GGA_K_GP85        = 510  !  gamma-TFvW form by Ghosh and Parr 
-  integer, parameter :: XC_GGA_K_PEARSON     = 511  !  Pearson 
-  integer, parameter :: XC_GGA_K_OL1         = 512  !  Ou-Yang and Levy v.1 
-  integer, parameter :: XC_GGA_K_OL2         = 513  !  Ou-Yang and Levy v.2 
-  integer, parameter :: XC_GGA_K_FR_B88      = 514  !  Fuentealba & Reyes (B88 version) 
-  integer, parameter :: XC_GGA_K_FR_PW86     = 515  !  Fuentealba & Reyes (PW86 version) 
-  integer, parameter :: XC_GGA_K_DK          = 516  !  DePristo and Kress                    
-  integer, parameter :: XC_GGA_K_PERDEW      = 517  !  Perdew                                
-  integer, parameter :: XC_GGA_K_VSK         = 518  !  Vitos, Skriver, and Kollar            
-  integer, parameter :: XC_GGA_K_VJKS        = 519  !  Vitos, Johansson, Kollar, and Skriver 
-  integer, parameter :: XC_GGA_K_ERNZERHOF   = 520  !  Ernzerhof 
-  integer, parameter :: XC_GGA_K_LC94        = 521  !  Lembarki & Chermette 
-  integer, parameter :: XC_GGA_K_LLP         = 522  !  Lee, Lee & Parr 
-  integer, parameter :: XC_GGA_K_THAKKAR     = 523  !  Thakkar 1992 
-  integer, parameter :: XC_GGA_X_WPBEH       = 524  !  short-range version of the PBE 
-  integer, parameter :: XC_GGA_X_HJS_PBE     = 525  !  HJS screened exchange PBE version 
-  integer, parameter :: XC_GGA_X_HJS_PBE_SOL = 526  !  HJS screened exchange PBE_SOL version 
-  integer, parameter :: XC_GGA_X_HJS_B88     = 527  !  HJS screened exchange B88 version 
-  integer, parameter :: XC_GGA_X_HJS_B97X    = 528  !  HJS screened exchange B97x version 
-  integer, parameter :: XC_GGA_X_ITYH        = 529  !  short-range recipe for exchange GGA functionals 
-  integer, parameter :: XC_HYB_GGA_XC_B3PW91 = 401  !  The original (ACM) hybrid of Becke    
-  integer, parameter :: XC_HYB_GGA_XC_B3LYP  = 402  !  The (in)famous B3LYP                  
-  integer, parameter :: XC_HYB_GGA_XC_B3P86  = 403  !  Perdew 86 hybrid similar to B3PW91    
-  integer, parameter :: XC_HYB_GGA_XC_O3LYP  = 404  !  hybrid using the optx functional 
-  integer, parameter :: XC_HYB_GGA_XC_mPW1K  = 405  !  mixture of mPW91 and PW91 optimized for kinetics 
-  integer, parameter :: XC_HYB_GGA_XC_PBEH   = 406  !  aka PBE0 or PBE1PBE 
-  integer, parameter :: XC_HYB_GGA_XC_B97    = 407  !  Becke 97                                 
-  integer, parameter :: XC_HYB_GGA_XC_B97_1  = 408  !  Becke 97-1                               
-  integer, parameter :: XC_HYB_GGA_XC_B97_2  = 410  !  Becke 97-2                               
-  integer, parameter :: XC_HYB_GGA_XC_X3LYP  = 411  !  maybe the best hybrid 
-  integer, parameter :: XC_HYB_GGA_XC_B1WC   = 412  !  Becke 1-parameter mixture of WC and PBE 
-  integer, parameter :: XC_HYB_GGA_XC_B97_K  = 413  !  Boese-Martin for Kinetics                
-  integer, parameter :: XC_HYB_GGA_XC_B97_3  = 414  !  Becke 97-3                               
-  integer, parameter :: XC_HYB_GGA_XC_MPW3PW = 415  !  mixture with the mPW functional       
-  integer, parameter :: XC_HYB_GGA_XC_B1LYP  = 416  !  Becke 1-parameter mixture of B88 and LYP 
-  integer, parameter :: XC_HYB_GGA_XC_B1PW91 = 417  !  Becke 1-parameter mixture of B88 and PW91 
-  integer, parameter :: XC_HYB_GGA_XC_mPW1PW = 418  !  Becke 1-parameter mixture of mPW91 and PW91 
-  integer, parameter :: XC_HYB_GGA_XC_MPW3LYP = 419  !  mixture of mPW and LYP                
-  integer, parameter :: XC_HYB_GGA_XC_SB98_1a = 420  !  Schmider-Becke 98 parameterization 1a    
-  integer, parameter :: XC_HYB_GGA_XC_SB98_1b = 421  !  Schmider-Becke 98 parameterization 1b    
-  integer, parameter :: XC_HYB_GGA_XC_SB98_1c = 422  !  Schmider-Becke 98 parameterization 1c    
-  integer, parameter :: XC_HYB_GGA_XC_SB98_2a = 423  !  Schmider-Becke 98 parameterization 2a    
-  integer, parameter :: XC_HYB_GGA_XC_SB98_2b = 424  !  Schmider-Becke 98 parameterization 2b    
-  integer, parameter :: XC_HYB_GGA_XC_SB98_2c = 425  !  Schmider-Becke 98 parameterization 2c    
-  integer, parameter :: XC_HYB_GGA_X_SOGGA11_X = 426  !  Hybrid based on SOGGA11 form 
-  integer, parameter :: XC_HYB_GGA_XC_HSE03  = 427  !  the 2003 version of the screened hybrid HSE 
-  integer, parameter :: XC_HYB_GGA_XC_HSE06  = 428  !  the 2006 version of the screened hybrid HSE 
-  integer, parameter :: XC_HYB_GGA_XC_HJS_PBE = 429  !  HJS hybrid screened exchange PBE version 
-  integer, parameter :: XC_HYB_GGA_XC_HJS_PBE_SOL = 430  !  HJS hybrid screened exchange PBE_SOL version 
-  integer, parameter :: XC_HYB_GGA_XC_HJS_B88 = 431  !  HJS hybrid screened exchange B88 version 
-  integer, parameter :: XC_HYB_GGA_XC_HJS_B97X = 432  !  HJS hybrid screened exchange B97x version 
-  integer, parameter :: XC_HYB_GGA_XC_CAM_B3LYP = 433  !  CAM version of B3LYP 
-  integer, parameter :: XC_HYB_GGA_XC_TUNED_CAM_B3LYP = 434  !  CAM version of B3LYP tunes for excitations
-  integer, parameter :: XC_HYB_GGA_XC_BHANDH = 435  !  Becke half-and-half 
-  integer, parameter :: XC_HYB_GGA_XC_BHANDHLYP = 436  !  Becke half-and-half with B88 exchange
-  integer, parameter :: XC_HYB_GGA_XC_MB3LYP_RC04 = 437  !  B3LYP with RC04 LDA                   
-  integer, parameter :: XC_MGGA_X_LTA        = 201  !  Local tau approximation of Ernzerhof & Scuseria 
-  integer, parameter :: XC_MGGA_X_TPSS       = 202  !  Perdew, Tao, Staroverov & Scuseria exchange 
-  integer, parameter :: XC_MGGA_X_M06_L      = 203  !  M06-Local functional of Minnesota 
-  integer, parameter :: XC_MGGA_X_GVT4       = 204  !  GVT4 from Van Voorhis and Scuseria 
-  integer, parameter :: XC_MGGA_X_TAU_HCTH   = 205  !  tau-HCTH from Boese and Handy 
-  integer, parameter :: XC_MGGA_X_BR89       = 206  !  Becke-Roussel 89  
-  integer, parameter :: XC_MGGA_X_BJ06       = 207  !  Becke & Johnson correction to Becke-Roussel 89  
-  integer, parameter :: XC_MGGA_X_TB09       = 208  !  Tran & Blaha correction to Becke & Johnson  
-  integer, parameter :: XC_MGGA_X_RPP09      = 209  !  Rasanen, Pittalis, and Proetto correction to Becke & Johnson  
-  integer, parameter :: XC_MGGA_X_2D_PRHG07  = 210  !  Pittalis, Rasanen, Helbig, Gross Exchange Functional 
-  integer, parameter :: XC_MGGA_X_2D_PRHG07_PRP10 = 211  !  PRGH07 with PRP10 correction 
-  integer, parameter :: XC_MGGA_X_REVTPSS    = 212  !  revised Perdew, Tao, Staroverov & Scuseria exchange 
-  integer, parameter :: XC_MGGA_X_PKZB       = 213  !  Perdew, Kurth, Zupan, and Blaha 
-  integer, parameter :: XC_MGGA_X_M05        = 214  !  M05 functional of Minnesota 
-  integer, parameter :: XC_MGGA_X_M05_2X     = 215  !  M05-2X functional of Minnesota 
-  integer, parameter :: XC_MGGA_X_M06_HF     = 216  !  M06-HF functional of Minnesota 
-  integer, parameter :: XC_MGGA_X_M06        = 217  !  M06 functional of Minnesota 
-  integer, parameter :: XC_MGGA_X_M06_2X     = 218  !  M06-2X functional of Minnesota 
-  integer, parameter :: XC_MGGA_X_M08_HX     = 219  !  M08-HX functional of Minnesota 
-  integer, parameter :: XC_MGGA_X_M08_SO     = 220  !  M08-SO functional of Minnesota 
-  integer, parameter :: XC_MGGA_C_TPSS       = 231  !  Perdew, Tao, Staroverov & Scuseria correlation 
-  integer, parameter :: XC_MGGA_C_VSXC       = 232  !  VSxc from Van Voorhis and Scuseria (correlation part) 
-  integer, parameter :: XC_MGGA_C_M06_L      = 233  !  M06-Local functional of Minnesota 
-  integer, parameter :: XC_MGGA_C_M06_HF     = 234  !  M06-HF functional of Minnesota 
-  integer, parameter :: XC_MGGA_C_M06        = 235  !  M06 functional of Minnesota 
-  integer, parameter :: XC_MGGA_C_M06_2X     = 236  !  M06-2X functional of Minnesota 
-  integer, parameter :: XC_MGGA_C_M05        = 237  !  M05 functional of Minnesota 
-  integer, parameter :: XC_MGGA_C_M05_2X     = 238  !  M05-2X functional of Minnesota 
-  integer, parameter :: XC_MGGA_C_PKZB       = 239  !  Perdew, Kurth, Zupan, and Blaha 
-  integer, parameter :: XC_MGGA_C_BC95       = 240  !  Becke correlation 95 
-  integer, parameter :: XC_HYB_MGGA_XC_M05   = 438  !  M05 functional of Minnesota                      
-  integer, parameter :: XC_HYB_MGGA_XC_M05_2X = 439  !  M05-2X functional of Minnesota                   
-  integer, parameter :: XC_HYB_MGGA_XC_B88B95 = 440  !  Mixture of B88 with BC95 (B1B95)                 
-  integer, parameter :: XC_HYB_MGGA_XC_B86B95 = 441  !  Mixture of B86 with BC95                         
-  integer, parameter :: XC_HYB_MGGA_XC_PW86B95 = 442  !  Mixture of PW86 with BC95                        
-  integer, parameter :: XC_HYB_MGGA_XC_BB1K  = 443  !  Mixture of B88 with BC95 from Zhao and Truhlar   
-  integer, parameter :: XC_HYB_MGGA_XC_M06_HF = 444  !  M06-HF functional of Minnesota                   
-  integer, parameter :: XC_HYB_MGGA_XC_MPW1B95 = 445  !  Mixture of mPW91 with BC95 from Zhao and Truhlar 
-  integer, parameter :: XC_HYB_MGGA_XC_MPWB1K = 446  !  Mixture of mPW91 with BC95 for kinetics          
-  integer, parameter :: XC_HYB_MGGA_XC_X1B95 = 447  !  Mixture of X with BC95                           
-  integer, parameter :: XC_HYB_MGGA_XC_XB1K  = 448  !  Mixture of X with BC95 for kinetics              
-  integer, parameter :: XC_HYB_MGGA_XC_M06   = 449  !  M06 functional of Minnesota                      
-  integer, parameter :: XC_HYB_MGGA_XC_M06_2X = 450  !  M06-2X functional of Minnesota                   
-
-end module libxc_funcs_m

=== removed file 'libxc-2.0.1/xc_version.h'
--- libxc-2.0.1/xc_version.h	2013-05-22 11:01:22 +0000
+++ libxc-2.0.1/xc_version.h	1970-01-01 00:00:00 +0000
@@ -1,34 +0,0 @@
-/*
- Copyright (C) 2012 M.A.L. Marques, M. Oliveira
-
- This program is free software; you can redistribute it and/or modify
- it under the terms of the GNU Lesser General Public License as published by
- the Free Software Foundation; either version 3 of the License, or
- (at your option) any later version.
-  
- This program is distributed in the hope that it will be useful,
- but WITHOUT ANY WARRANTY; without even the implied warranty of
- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- GNU Lesser General Public License for more details.
-  
- You should have received a copy of the GNU Lesser General Public License
- along with this program; if not, write to the Free Software
- Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-*/
-
-#ifndef _XC_VERSION_H
-#define _XC_VERSION_H
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#define XC_VERSION "2.0.1"
-#define XC_MAJOR_VERSION 2
-#define XC_MINOR_VERSION 0
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif

